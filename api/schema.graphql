scalar GraphQLDate

type Review {
  _id: ID!
  id: Int!
  title: String
  reviewer: String
  courseName: String
  createdDate: GraphQLDate
  courseDate: GraphQLDate
  answer1: String
  answer2: String
  answer3: String
  answer4: String
  additional: String
}

type ReviewListWithPages {
  reviews: [Review!]!
  pages: Int
}

"Toned down Issue, used as inputs, without server generated values."
input ReviewInputs {
  title: String!
  reviewer: String
  courseName: String!
  createdDate: GraphQLDate
  courseDate: GraphQLDate
  answer1: String
  answer2: String
  answer3: String
  answer4: String
  additional: String 
}

"""Inputs for issueUpdate: all are optional. Whichever is specified will
be set to the given value, undefined fields will remain unmodified."""

input ReviewUpdateInputs {
  title: String
  reviewer: String
  courseName: String
  courseDate: GraphQLDate
  answer1: String
  answer2: String
  answer3: String
  answer4: String
  additional: String 
}

##### Top level declarations

type Query {
  about: String!
  reviewList(
    search: String
    page: Int = 1
  ): ReviewListWithPages
  review(id: Int!): Review!

}

type Mutation {
  setAboutMessage(message: String!): String
  reviewAdd(review: ReviewInputs!): Review!
  reviewUpdate(id: Int!, changes: ReviewUpdateInputs!): Review!
  reviewDelete(id: Int!): Boolean!
}